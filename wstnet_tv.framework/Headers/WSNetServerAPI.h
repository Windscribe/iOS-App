// Generated by Scapix Language Bridge
// https://www.scapix.com

#import "scapix/bridge/objc/BridgeObject.h"

NS_ASSUME_NONNULL_BEGIN

@class WSNetCancelableCallback;

@interface WSNetServerAPI : BridgeObject

-(void)setApiResolutionsSettings:(BOOL)isAutomatic manualAddress:(NSString*)manualAddress;
-(void)setIgnoreSslErrors:(BOOL)bIgnore;
-(WSNetCancelableCallback*)setTryingBackupEndpointCallback:(void(^)(unsigned int, unsigned int))tryingBackupEndpointCallback;
-(WSNetCancelableCallback*)login:(NSString*)username password:(NSString*)password code2fa:(NSString*)code2fa callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)session:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)deleteSession:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)serverLocations:(NSString*)language revision:(NSString*)revision isPro:(BOOL)isPro alcList:(NSArray<NSString*>*)alcList callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)serverCredentials:(NSString*)authHash isOpenVpnProtocol:(BOOL)isOpenVpnProtocol callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)serverConfigs:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)portMap:(NSString*)authHash version:(uint32_t)version forceProtocols:(NSArray<NSString*>*)forceProtocols callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)recordInstall:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)addEmail:(NSString*)authHash email:(NSString*)email callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)confirmEmail:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)signup:(NSString*)username password:(NSString*)password referringUsername:(NSString*)referringUsername email:(NSString*)email callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)webSession:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)checkUpdate:(int)updateChannel appVersion:(NSString*)appVersion appBuild:(NSString*)appBuild osVersion:(NSString*)osVersion osBuild:(NSString*)osBuild callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)debugLog:(NSString*)username strLog:(NSString*)strLog callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)speedRating:(NSString*)authHash hostname:(NSString*)hostname ip:(NSString*)ip rating:(int32_t)rating callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)staticIps:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)pingTest:(uint32_t)timeoutMs callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)notifications:(NSString*)authHash pcpid:(NSString*)pcpid callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)getRobertFilters:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)setRobertFilter:(NSString*)authHash id:(NSString*)id status:(int32_t)status callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)syncRobert:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)wgConfigsInit:(NSString*)authHash clientPublicKey:(NSString*)clientPublicKey deleteOldestKey:(BOOL)deleteOldestKey callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)wgConfigsConnect:(NSString*)authHash clientPublicKey:(NSString*)clientPublicKey hostname:(NSString*)hostname deviceId:(NSString*)deviceId wgTtl:(NSString*)wgTtl callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)myIP:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)mobileBillingPlans:(NSString*)authHash mobilePlanType:(NSString*)mobilePlanType promo:(NSString*)promo version:(int)version callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)sendPayment:(NSString*)authHash appleID:(NSString*)appleID appleData:(NSString*)appleData appleSIG:(NSString*)appleSIG callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)verifyPayment:(NSString*)authHash purchaseToken:(NSString*)purchaseToken gpPackageName:(NSString*)gpPackageName gpProductId:(NSString*)gpProductId type:(NSString*)type amazonUserId:(NSString*)amazonUserId callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)postBillingCpid:(NSString*)authHash payCpid:(NSString*)payCpid callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)getXpressLoginCode:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)verifyXpressLoginCode:(NSString*)xpressCode sig:(NSString*)sig callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)sendSupportTicket:(NSString*)supportEmail supportName:(NSString*)supportName supportSubject:(NSString*)supportSubject supportMessage:(NSString*)supportMessage supportCategory:(NSString*)supportCategory type:(NSString*)type channel:(NSString*)channel callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)regToken:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)signupUsingToken:(NSString*)token callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)claimAccount:(NSString*)authHash username:(NSString*)username password:(NSString*)password email:(NSString*)email claimAccount:(NSString*)claimAccount callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)shakeData:(NSString*)authHash callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)recordShakeForDataScore:(NSString*)authHash score:(NSString*)score signature:(NSString*)signature callback:(void(^)(int, NSString*))callback;
-(WSNetCancelableCallback*)verifyTvLoginCode:(NSString*)authHash xpressCode:(NSString*)xpressCode callback:(void(^)(int, NSString*))callback;

@end

NS_ASSUME_NONNULL_END
